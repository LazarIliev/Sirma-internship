package com.sirma.javacourse.chatclient.main;

import javax.swing.*;

import com.sirma.javacourse.chatclient.views.LoginView;

public class RunnerClient {
	//Клиентска част
	// За да се свърже със сървъра, потребителят на клиентския модул въвежда nickname и натиска бутона за свързване в появила се пред него форма за логване.
	// Nickname-ът трябва да е уникален в сравнение с тези на вече свързаните потребители. Не се прави разлика между малки и големи букви. Забранени са символите '[' и ']'.
	// След натискане на бутона за свързване клиентът изпраща до сървъра въведения от потребителя nickname и чака за отговор.
	// При неуспешен опит за свързване (върнат от сървъра отрицателен отговор) пред потребителя се появява прозорец със съобщение обясняващо, че е въведен невалиден nickname и че е необходимо да се опита отново.
	//----------------------------------------------------------------------------------------------------------------------------------
	// След свързването със сървъра пред потребителя се появява прозорец съдържащ:
	// -- текстово поле за въвеждане на съобщение;
	// -- бутон за изпращане на съобщението от текстовото поле;* поле със списък на потребителите online;
	// -- поле за получените съобщения;
	// -- бутон за край на сесията.
	// Потребителят може да въвежда само едноредови съобщения. Максималният брой символи е 200. След изпращането на съобщението всички свързани към сървъра потребители, дори и авторът на съобщението, го получават.
	//
	// В полето за online потребителите списъкът се поддържа актуален чрез обработка на съобщения от сървъра.
	// Тези съобщения указват на клиента да добави или премахне определен nickname от списъка.
	//
	// В третото поле съобщенията се изписват във формата:
	// [<час:минута:секунда>] <nickname>: <текст на съобщението>
	//
	// Текстът на съобщението започва винаги с главна буква (capitalizing)
	// При натискане на бутона за край на сесията клиентът изпраща съобщение за край до сървъра и прекретява връзката с него.
	public static void main(String[] args) {
		SwingUtilities.invokeLater(LoginView::new);
	}
}
